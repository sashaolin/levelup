# Python Developer
#  3.1. Практика
#
#  1. У вас есть массив чисел. Напишите три функции, которые вычисляют сумму этих чисел:
#  с for-циклом,

# a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# i = 0
# b = 0
# for i in a:
#     b = b + i
# print(b)



# с while -циклом, с * рекурсией.




# a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# # b = 0
# # while a:
# #     b = b + (a.pop())
# print(b)


# 2. Напишите функцию, которая создаёт комбинацию двух списков таким образом:
# [1, 2, 3] (+) [11, 22, 33] -> [1, 11, 2, 22, 3, 33]

# 3. Существует ли треугольник с заданными сторонами.

# str_1 = list(input('Введите стороны треугольника через пробел:'))
# if (str_1[1] + str_1[2]) > str_1[3] and  (str_1[2] + str_1[3]) > str_1[1] and (str_1[1] + str_1[3]) > str_1[3]:
#     print('Треугольник существует')
# else:
#     print('Треугольник не существует')

# 4. Расстояние между точками. На вход поступает два значение (кортежа) с координатами - широта и долгота.
# Найти расстояние между этими точками. cos(d) = sin(φА)·sin(φB) + cos(φА)·cos(φB)·cos(λА − λB),
# где φА и φB — широты, λА, λB — долготы данных пунктов,
# d — расстояние между пунктами, измеряется в радианах длиной дуги большого круга земного шара.
# Расстояние между пунктами, измеряемое в километрах,
# определяется по формуле: L = d·R, где R = 6371 км — средний радиус земного шара.
#
#  5. Поиск квадратных уравнений, имеющих решение. Программа принимает от пользователя диапазоны
#  для коэффициентов a, b, c квадратного уравнения: ax2 + bx + c = 0.
#  Перебирает все варианты целочисленных коэффициентов в указанных диапазонах,
#  определяет квадратные уравнения, которые имеют решение.

# 6. Заданы M строк символов, которые вводятся с клавиатуры.
# Каждая строка представляет собой последовательность символов,
# включающих в себя вопросительные знаки.
# Заменить в каждой строке все имеющиеся вопросительные знаки звёздочками.


# 7. Системная дата имеет вид 2009-06-15.
# Нужно преобразовать это значение в строку,
# строку разделить на компоненты (символ→разделитель→дефис),
# потом из этих компонентов сконструировать нужную строку. (2009-06-15 -> 15/06/2009)
#
# #  8. Задан вес в граммах. Определить вес в тоннах и килограммах.
# weigth_g = int(input('Введите вес в граммах'))
# a = weigth_g / 1000
# b = a / 1000
# print('Вес в килограммах:', a)
# print('Вес в тоннах', b)


# 9. Имеется коробка со сторонами: A × B × C. Определить, пройдёт ли она в дверь с размерами M × K.

# a = int(input('Введите стороны коробки, a:'))
# b = int(input('Введите стороны коробки, b:'))
# c = int(input('Введите стороны коробки, c:'))
# m = int(input('Введите ширину двери, m:'))
# k = int(input('Введите высоту двери, k:'))
# i = 'Не проходит'
# if a < m:
#     if b < k:
#         i = 'Проходит'
#     elif c < k:
#         i = 'Проходит'
# elif b < m:
#     if a < k:
#         i = 'Проходит'
#     elif c < k:
#         i = 'Проходит'
# elif c < m:
#     if a < k:
#         i = 'Проходит'
#     elif b < k:
#         i = 'Проходит'
# print(i)


# 10. Можно ли из бревна, имеющего диаметр поперечного сечения D, выпилить квадратный брус шириной A?

# diam_1 = int(input('Введите диаметр бревна:'))
# weld_1 = int(input('Введите сторону квадрата:'))
# if diam_1 >= (weld_1 * (2 ** 0.5)):
#     print('Возможно')
# else:
#     print('Невозможно')

# 11. Дан номер места в плацкартном вагоне. Определить, какое это место: верхнее или нижнее, в купе или боковое.

# place_1 = int(input('Введите номер места в плацкартном вагоне:'))
# if 55 > place_1 > 36:
#     print('Боковое место')
# elif 37 > place_1 > 0 and place_1 % 2 == 0:
#     print('Верхнее место в купе')
# elif 37 > place_1 > 0 and place_1 % 2 > 0:
#     print('Нижнее место в купе')
# else:
#     print('Указанное место не входит в вагон')

# 12. Известна денежная сумма. Разменять её купюрами 500, 100, 10 и монетой 2 грн., если это возможно.

a = int(input('Введите сумму для размена:'))
b = a // 500
b1 = a % 500
c = b1 // 100
c1 = b1 % 100
d = c1 // 10
d1 = c1 % 10
e = d1 // 2
e1 = d1 % 2
if e1 > 0:
    print('Сумму не возможно разменять полностью, остаток будет равен:', e1)
print('Количество купюр 500 грн:', b)
print('Количество купюр 100 грн:', c)
print('Количество купюр 10 грн:', d)
print('Количество монет 2 грн:', e)


# 13. Пользователь вводит число n, программа должна проверить является ли оно простым и сообщить об этом.
#
#  14. Вывести таблицу умножения числа M в диапазоне от числа a до числа b. Числа M, a и b вводит пользователь.
# 15. Дан одномерный массив числовых значений, насчитывающий N элементов.
# Поменять местами элементы, стоящие на чётных и нечётных местах: A[1] ↔ A[2]; A[3] ↔ A[4] ...
# 16. Вывести список простых чисел в диапазоне d. Диапазон d вводит пользователь.